# update time 2022-05-07
# version 3.0
version: "3.5"
services:
  ######################
  ##   Applications   ##
  ######################
  app.ttrss:
    image: wangqiru/ttrss
    container_name: ttrss
    depends_on:
      - database.ttrss
      - service.clash
    ports:
      - ${TTRSS_PORT:-10080}:80/tcp # change the port if you need
    environment:
      - SELF_URL_PATH=${TTRSS_SELF_URL:?'The TTRSS self url value is needed'} # please change to your own domain
      - DISABLE_USER_IN_DAYS=14
      - ALLOW_PORTS=${RSS_ALLOEW_PORTS:-'80,443,3000'}
      # proxy
      - HTTP_PROXY=clash:8080
      - HTTPS_PROXY=clash:8080
      # database settings
      - DB_HOST=database.ttrss
      - DB_PORT=5432
      - DB_NAME=ttrss
      - DB_USER=postgres
      - DB_PASS=${DB_Password:-'@pass_for_DB'} # please change the password
      - ENABLE_PLUGINS=auth_internal,fever # auth_internal is required.
    networks:
      - net_public
      - net_private
    volumes:
      - feed-favicons:/var/www/feed-icons/
      - starred-images:/var/www/cache/starred-images/
      - plugins:/var/www/app/plugins.local/
      - themes:/var/www/app/themes.local/
      - /etc/localtime:/etc/localtime:ro
    stdin_open: true
    tty: true
    labels:
      - one.colinx.rssmanx.description='Tiny Tiny RSS is a free and open source web-based news feed (RSS/Atom) reader and aggregator'
    restart: always

  app.huginn:
    depends_on:
      - database.huginn
    image: huginn/huginn
    container_name: huginn
    ports:
      - ${HUGINN_PORT:-10070}:80/tcp
    environment:
      - DOMAIN=${HOST}:${HUGINN_PORT:-10070}
      - PORT=80
      # database settings
      - DATABASE_ADAPTER=postgresql
      - DATABASE_HOST=database.huginn
      - HUGINN_DATABASE_USERNAME=huginn
      - HUGINN_DATABASE_PASSWORD=${DB_Password:-'@pass_for_DB'}
      - DATABASE_PORT=5432
      - POSTGRES_PORT_5432_TCP_ADDR=database.huginn
      - POSTGRES_PORT_5432_TCP_PORT=5432
    networks:
      - net_public
      - net_private
    dns:
      - 223.5.5.5
      - 8.8.8.8
    restart: always
    labels:
      - one.colinx.rssmanx.description='Huginn is a powerful IFTTT application'

  ######################
  ##     Databases    ##
  ######################
  database.ttrss:
    image: postgres:13-alpine # Lock major version
    container_name: ttrss_db
    expose:
      - 5432
    environment:
      - POSTGRES_PASSWORD=${DB_Password:-'@pass_for_DB'} # feel free to change the password
    volumes:
      - ${DB_DIR:-~/.docker/Database}/DBttrss/:/var/lib/postgresql/data # persist db data
    networks:
      - net_private
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 6
    restart: always
    labels:
      - one.colinx.rssmanx.description='Database of Tiny Tiny RSS service'

  database.huginn:
    image: postgres:13-alpine # Lock major version
    container_name: huginn_db
    expose:
      - 5432
    environment:
      - POSTGRES_USER=huginn
      - POSTGRES_PASSWORD=${DB_Password:-'@pass_for_DB'} # feel free to change the password
    volumes:
      - ${DB_DIR:-~/.docker/Database}/DBhuginn/:/var/lib/postgresql/data # persist db data
    networks:
      - net_private
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U huginn" ]
      interval: 30s
      timeout: 5s
      retries: 3
    restart: always
    labels:
      - one.colinx.rssmanx.description='Database of Huginn'

  ######################
  ##     Services     ##
  ######################

  service.rsshub:
    image: diygod/rsshub
    container_name: rsshub
    depends_on:
      - service.redis
      - service.clash
    restart: on-failure:5
    # ports:
    #     - '1200:1200'
    environment:
      - PORT=80
      # miscellaneous settings
      - NODE_ENV=production
      - CACHE_TYPE=redis
      - REDIS_URL=redis://service.redis:6379/
      - PUPPETEER_WS_ENDPOINT=ws://service.browserless:3000
      # use proxy
      - PROXY_URI=http://clash:8080
    expose:
      - 80
    networks:
      - net_public
      - net_private
    dns:
      - 223.5.5.5
      - 8.8.8.8
    volumes:
      - /etc/localtime:/etc/localtime:ro
    labels:
      - com.centurylinklabs.watchtower.enable=true # keep the rsshub up to date
      - one.colinx.rssmanx.description='RSShub makes everything rssable'

  service.browserless:
    # dependency of rsshub
    image: browserless/chrome
    container_name: rsshub_browserless
    environment:
      - USE_CHROME_STABLE=true
    ulimits:
      # 禁止生成转储文件，避免耗尽磁盘空间
      core:
        hard: 0
        soft: 0
    restart: unless-stopped
    networks:
      - net_public
    labels:
      - com.centurylinklabs.watchtower.enable=true # keep rsshub up to date
      - one.colinx.rssmanx.description='This is one of the rsshub's dependencies'

  service.redis:
    # dependency of rsshub
    image: redis:6-alpine
    container_name: rsshub_redis
    networks:
      - net_private
    volumes:
      - redis-data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: always
    labels:
      - com.centurylinklabs.watchtower.enable=true # keep rsshub up to date
      - one.colinx.rssmanx.description='This is one of the rsshub's dependencies'

  service.mercury:
    # set Mercury Parser API endpoint to `service.mercury:3000` in TTRSS plugin setting page
    image: wangqiru/mercury-parser-api
    container_name: ttrss_mercury
    expose:
      - 3000
    environment:
      - NODE_ENV=production
      - HTTP_PROXY=clash:8080
      - HTTPS_PROXY=clash:8080
    networks:
      - net_public
    labels:
      - one.colinx.rssmanx.description='A plugin of TTRSS that can help you get fulltext of the RSS link'
    restart: always

  service.opencc:
    # set OpenCC API endpoint to `service.opencc:3000` in TTRSS plugin setting page
    #    image: wangqiru/opencc-api-server
    image: colinxkl/opencc-api-go # a liter opencc api server
    container_name: ttrss_opencc
    environment:
      - NODE_ENV=production
    expose:
      - 3000
    networks:
      - net_private
    labels:
      - one.colinx.rssmanx.description='A plugin of TTRSS, translation between Traditional Chinese and Simplified Chinese'
    restart: unless-stopped

  service.clash:
    image: dreamacro/clash
    container_name: clash
    networks:
      - net_public
    volumes:
      - ./config.yaml:/root/.config/clash/config.yaml:ro
      - clash-data:/root/.config/clash
      - /etc/localtime:/etc/localtime:ro
    labels:
      - one.colinx.rssmanx.description='A flexible and powerful forward proxy'
    restart: always

  ######################
  ##     Utilities    ##
  ######################
  utility.watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_LABEL_ENABLE=true # only update containers with flags
      - WATCHTOWER_SCHEDULE=0 0 4 * * * # update everyday at midnight
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_REVIVE_STOPPED=true # restart stopped rsshub after an update if it crashed
    networks:
      - net_public
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
    labels:
      - one.colinx.rssmanx.description='A tool to make your docker containers up to date.'
    restart: unless-stopped

volumes:
  redis-data:
  feed-favicons:
  starred-images:
  plugins:
  themes:
  clash-data:


networks:
  net_public:
  net_private:
    internal: true
